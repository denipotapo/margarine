/**
 * Fit
 * ============================================ */

@mixin fit--three($force: false) {
  @include reset-last;
  display: block;
  overflow: hidden;
  > * {
    margin: 0 ($default-space * -1) $default-space;
  }
  @if $force == "force" {
    @include breakpoint(s) {
      > * {
        @include box-sizing(border-box);
        height: auto;
        float: left;
        list-style: none;
        margin: 0 0 $default-space 0;
        padding: 0 ($default-space / 2);
        width: 33.3333%;
      }
      > *:nth-of-type(3n+1)  { clear: both; }
      > *:nth-of-type(1n)    { clear: none; }
    }
  }
  @else {
    @include breakpoint(m) {
      > * {
        @include box-sizing(border-box);
        height: auto;
        float: left;
        list-style: none;
        margin: 0 0 $default-space 0;
        padding: 0 ($default-space / 2);
        width: 33.3333%;
      }
      > *:nth-of-type(3n+1)  { clear: both; }
      > *:nth-of-type(1n)    { clear: none; }
    }
  }
}

@mixin fit--four($force: false) {
  @include reset-last;
  display: block;
  overflow: hidden;
  > * {
    margin: 0 ($default-space * -1) $default-space;
  }
  @if $force == "force" {
    @include breakpoint(s) {
      > * {
        @include box-sizing(border-box);
        height: auto;
        float: left;
        list-style: none;
        margin: 0 0 $default-space 0;
        padding: 0 ($default-space / 2);
        width: 25%;
      }
      > *:nth-of-type(3n+1)  { clear: both; }
      > *:nth-of-type(1n)    { clear: none; }
    }
  }
  @else {
    @include breakpoint(m) {
      > * {
        @include box-sizing(border-box);
        height: auto;
        float: left;
        list-style: none;
        margin: 0 0 $default-space 0;
        padding: 0 ($default-space / 2);
        width: 25%;
      }
      > *:nth-of-type(3n+1)  { clear: both; }
      > *:nth-of-type(1n)    { clear: none; }
    }
  }
}